package test;

import dagger.internal.DaggerGenerated;
import javax.annotation.processing.Generated;

@DaggerGenerated
@Generated(
    value = "dagger.internal.codegen.ComponentProcessor",
    comments = "https://dagger.dev"
)
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
final class DaggerC implements C {
  private final DaggerC c = this;

  private DaggerC() {


  }

  public static Builder builder() {
    return new Builder();
  }

  public static C create() {
    return new Builder().build();
  }

  @Override
  public C.Foo.Sub.Builder fooBuilder() {
    return new F_SubBuilder(c);
  }

  @Override
  public C.Bar.Sub.Builder barBuilder() {
    return new B_SubBuilder(c);
  }

  static final class Builder {
    private Builder() {
    }

    public C build() {
      return new DaggerC();
    }
  }

  private static final class F_SubBuilder implements C.Foo.Sub.Builder {
    private final DaggerC c;

    private F_SubBuilder(DaggerC c) {
      this.c = c;
    }

    @Override
    public C.Foo.Sub build() {
      return new F_SubImpl(c);
    }
  }

  private static final class B_SubBuilder implements C.Bar.Sub.Builder {
    private final DaggerC c;

    private B_SubBuilder(DaggerC c) {
      this.c = c;
    }

    @Override
    public C.Bar.Sub build() {
      return new B_SubImpl(c);
    }
  }

  private static final class F_SubImpl implements C.Foo.Sub {
    private final DaggerC c;

    private final F_SubImpl f_SubImpl = this;

    private F_SubImpl(DaggerC c) {
      this.c = c;


    }
  }

  private static final class B_SubImpl implements C.Bar.Sub {
    private final DaggerC c;

    private final B_SubImpl b_SubImpl = this;

    private B_SubImpl(DaggerC c) {
      this.c = c;


    }
  }
}


package test;

import com.google.errorprone.annotations.CanIgnoreReturnValue;
import dagger.internal.DaggerGenerated;
import javax.annotation.processing.Generated;

@DaggerGenerated
@Generated(
    value = "dagger.internal.codegen.ComponentProcessor",
    comments = "https://dagger.dev"
)
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerMyComponent implements MyComponent {
  private final DaggerMyComponent myComponent = this;

  private DaggerMyComponent() {


  }

  public static Builder builder() {
    return new Builder();
  }

  public static MyComponent create() {
    return new Builder().build();
  }

  @Override
  public Foo foo() {
    return injectFoo(Foo_Factory.newInstance());
  }

  @Override
  public void inject(Foo foo) {
    injectFoo(foo);
  }

  @CanIgnoreReturnValue
  private Foo injectFoo(Foo instance) {
    Foo_MembersInjector.injectBar(instance, new Bar());
    return instance;
  }

  public static final class Builder {
    private Builder() {
    }

    public MyComponent build() {
      return new DaggerMyComponent();
    }
  }
}


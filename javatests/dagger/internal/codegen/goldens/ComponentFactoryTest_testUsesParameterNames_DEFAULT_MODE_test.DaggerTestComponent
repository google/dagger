package test;

import dagger.internal.DaggerGenerated;
import dagger.internal.Preconditions;
import javax.annotation.processing.Generated;

@DaggerGenerated
@Generated(
    value = "dagger.internal.codegen.ComponentProcessor",
    comments = "https://dagger.dev"
)
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
final class DaggerTestComponent implements TestComponent {
  private final TestModule testModule;

  private final DaggerTestComponent testComponent = this;

  private DaggerTestComponent(TestModule testModuleParam) {
    this.testModule = testModuleParam;

  }

  public static TestComponent.Factory factory() {
    return new Factory();
  }

  @Override
  public String string() {
    return TestModule_StringFactory.string(testModule);
  }

  private static final class Factory implements TestComponent.Factory {
    @Override
    public TestComponent newTestComponent(TestModule mod) {
      Preconditions.checkNotNull(mod);
      return new DaggerTestComponent(mod);
    }
  }
}


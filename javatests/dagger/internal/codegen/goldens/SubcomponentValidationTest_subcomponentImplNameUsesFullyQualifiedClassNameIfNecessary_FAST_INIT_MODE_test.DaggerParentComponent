package test;

import dagger.internal.DaggerGenerated;
import javax.annotation.processing.Generated;
import top1.a.b.c.d.E;

@DaggerGenerated
@Generated(
    value = "dagger.internal.codegen.ComponentProcessor",
    comments = "https://dagger.dev"
)
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
final class DaggerParentComponent implements ParentComponent {
  private final DaggerParentComponent parentComponent = this;

  private DaggerParentComponent() {


  }

  public static Builder builder() {
    return new Builder();
  }

  public static ParentComponent create() {
    return new Builder().build();
  }

  @Override
  public E.F.Sub top1() {
    return new F_SubImpl(parentComponent);
  }

  @Override
  public top2.a.b.c.d.E.F.Sub top2() {
    return new F2_SubImpl(parentComponent);
  }

  static final class Builder {
    private Builder() {
    }

    public ParentComponent build() {
      return new DaggerParentComponent();
    }
  }

  private static final class F_SubImpl implements E.F.Sub {
    private final DaggerParentComponent parentComponent;

    private final F_SubImpl f_SubImpl = this;

    private F_SubImpl(DaggerParentComponent parentComponent) {
      this.parentComponent = parentComponent;


    }
  }

  private static final class F2_SubImpl implements top2.a.b.c.d.E.F.Sub {
    private final DaggerParentComponent parentComponent;

    private final F2_SubImpl f2_SubImpl = this;

    private F2_SubImpl(DaggerParentComponent parentComponent) {
      this.parentComponent = parentComponent;


    }
  }
}

